<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nick&#39;s Blog</title>
  <subtitle>出发之前永远是梦想 上路之后永远是挑战</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://nickgo.net/"/>
  <updated>2016-11-05T12:54:09.000Z</updated>
  <id>http://nickgo.net/</id>
  
  <author>
    <name>Nick Chang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript ES6(ES2015+) 核心功能总结</title>
    <link href="http://nickgo.net/2016/11/05/JavaScript-ES6-ES2015-%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD%E6%80%BB%E7%BB%93/"/>
    <id>http://nickgo.net/2016/11/05/JavaScript-ES6-ES2015-核心功能总结/</id>
    <published>2016-11-05T12:50:03.000Z</published>
    <updated>2016-11-05T12:54:09.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://www.improgrammer.net/wp-content/uploads/2016/03/Pasted-image-at-2016_02_26-01_26-PM-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JavaScript 在过去几年里发生了很大的变化。今天介绍几个 ES6 你不得不知道的新功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;ES6发展史及趋势&quot;&gt;&lt;a href=&quot;#ES6发展史及趋势&quot; class=&quot;headerlink&quot; title=&quot;ES6发展史及趋势&quot;&gt;&lt;/a&gt;ES6发展史及趋势&lt;/h3&gt;&lt;p&gt;ECMAScript 6.0（以下简称ES6）是JavaScript语言的下一代标准，已经在2015年6月正式发布了。它的目标，是使得JavaScript语言可以用来编写复杂的大型应用程序，成为企业级开发语言。&lt;/p&gt;
&lt;p&gt;新的语言规范被称作 ECMAScript 6。也称为 ES6 或 ES2015+ 。&lt;/p&gt;
&lt;p&gt;自从 1995 年 JavaScript 诞生以来，它一直在缓慢地发展。每隔几年就会增加一些新内容。1997 年，ECMAScript 成为 JavaScript 语言实现的规范。它已经有了好几个版本，比如 ES3 , ES5 , ES6 等等。&lt;br&gt;&lt;img src=&quot;http://of30nsqpd.bkt.clouddn.com/md/01/ES6_01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Chrome，MS Edge，Firefox，Safari，Node 和许多其他的环境都已内置支持大多数的 JavaScript ES6 功能。可见 ES6 已经逐渐被广大开发者和开发商所普遍认可和接受的，所以也该及时更新自己的JavaScript技能了。&lt;/p&gt;
&lt;h3 id=&quot;变量的块级作用域&quot;&gt;&lt;a href=&quot;#变量的块级作用域&quot; class=&quot;headerlink&quot; title=&quot;变量的块级作用域&quot;&gt;&lt;/a&gt;变量的块级作用域&lt;/h3&gt;&lt;p&gt;使用 ES6 ,声明变量我们可以使用 let 或 const。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;var&lt;/code&gt;与&lt;code&gt;let&lt;/code&gt;和&lt;code&gt;const&lt;/code&gt;的区别我们先来看看：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先 &lt;code&gt;var&lt;/code&gt;有什么不足？ 使用 &lt;code&gt;var&lt;/code&gt;的问题是变量会漏入其他代码块，诸如 &lt;code&gt;for&lt;/code&gt;循环&lt;code&gt;if&lt;/code&gt;代码块中。 而&lt;code&gt;let&lt;/code&gt;声明的变量只在&lt;code&gt;let&lt;/code&gt;命令所在的代码块有效。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;a &lt;span class=&quot;comment&quot;&gt;// ReferenceError: a is not defined.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;b &lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;let&lt;/code&gt;不会像 &lt;code&gt;var&lt;/code&gt;存在变量提升的情况&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo); &lt;span class=&quot;comment&quot;&gt;// 输出undefined&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(bar); &lt;span class=&quot;comment&quot;&gt;// 报错ReferenceError&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; bar = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码中，变量&lt;code&gt;foo&lt;/code&gt;用&lt;code&gt;var&lt;/code&gt;命令声明，会发生变量提升，即脚本开始运行时，变量&lt;code&gt;foo&lt;/code&gt;已经存在了，但是没有值，所以会输出&lt;code&gt;undefined&lt;/code&gt;。变量&lt;code&gt;bar&lt;/code&gt;用&lt;code&gt;let&lt;/code&gt;命令声明，不会发生变量提升。这表示在声明它之前，变量&lt;code&gt;bar&lt;/code&gt;是不存在的，这时如果用到它，就会抛出一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;const声明一个只读的常量。一旦声明，常量的值就不能改变。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 ES6 中，let 将变量提升到代码块的顶部（不是像 ES5 那样的函数顶部）。&lt;/li&gt;
&lt;li&gt;然而，代码块中，在变量声明之前引用它会导致 ReferenceError 错误。&lt;/li&gt;
&lt;li&gt;let 是块级作用域。你不能在它被声明之前引用它。&lt;/li&gt;
&lt;li&gt;“暂存死区（Temporal dead zone）”是指从代码块开始直到变量被声明之间的区域。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;模板字面量&quot;&gt;&lt;a href=&quot;#模板字面量&quot; class=&quot;headerlink&quot; title=&quot;模板字面量&quot;&gt;&lt;/a&gt;模板字面量&lt;/h3&gt;&lt;p&gt;现在你可以使用反引号 (`) 和字符串插值 ${}：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; first = &lt;span class=&quot;string&quot;&gt;&#39;Anna&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; last = &lt;span class=&quot;string&quot;&gt;&#39;Mejia&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;`Your name is &lt;span class=&quot;subst&quot;&gt;$&amp;#123;first&amp;#125;&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;$&amp;#123;last&amp;#125;&lt;/span&gt;.`&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;变量的解构赋值&quot;&gt;&lt;a href=&quot;#变量的解构赋值&quot; class=&quot;headerlink&quot; title=&quot;变量的解构赋值&quot;&gt;&lt;/a&gt;变量的解构赋值&lt;/h3&gt;&lt;p&gt;ES6允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。&lt;/p&gt;
&lt;p&gt;以前，为变量赋值，只能直接指定值。ES6允许写成以下这种形式。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 数组的解构赋值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; [a, b, c] = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;a &lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;b &lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;c &lt;span class=&quot;comment&quot;&gt;// 3&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 交换值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[a, b] = [b, a];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a, b); &lt;span class=&quot;comment&quot;&gt;// 2 1&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//对象的解构赋值&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;var&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;bar, &lt;/span&gt;foo &amp;#125; = &amp;#123; foo: &lt;span class=&quot;string&quot;&gt;&quot;aaa&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;bar: &lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;bbb&quot;&lt;/span&gt; &amp;#125;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;foo&lt;/span&gt; // &lt;span class=&quot;string&quot;&gt;&quot;aaa&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bar &lt;/span&gt;// &lt;span class=&quot;string&quot;&gt;&quot;bbb&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;var&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;baz &lt;/span&gt;&amp;#125; = &amp;#123; foo: &lt;span class=&quot;string&quot;&gt;&quot;aaa&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;bar: &lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;bbb&quot;&lt;/span&gt; &amp;#125;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;baz &lt;/span&gt;// undefined&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最佳实践：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用数组解构去获取元素或交换值。它可以避免创建临时引用。&lt;/li&gt;
&lt;li&gt;不要对多个返回值使用数组解构，而是要用对象解构。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;类和对象&quot;&gt;&lt;a href=&quot;#类和对象&quot; class=&quot;headerlink&quot; title=&quot;类和对象&quot;&gt;&lt;/a&gt;类和对象&lt;/h3&gt;&lt;p&gt;在 JavaScript 中，每个对象都有一个原型对象。所有的 JavaScript 对象都从它们的原型对象那里继承方法和属性。&lt;/p&gt;
&lt;p&gt;在 ES5 中，为了实现面向对象编程（OOP），我们使用构造函数来创建对象，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ES5&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Animal = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyConstructor&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    MyConstructor.prototype.speak = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;speak&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&#39; makes a noise.&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; MyConstructor;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; animal = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Animal(&lt;span class=&quot;string&quot;&gt;&#39;animal&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;animal.speak(); &lt;span class=&quot;comment&quot;&gt;// animal makes a noise.&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ES6 中有了一些语法糖。通过像 class 和 constructor 这样的关键字和减少样板代码，我们可以做到同样的事情。另外，speak() 相对照 constructor.prototype.speak = function () 更加清晰：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ES6&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Animal&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;(name) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    speak() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&#39; makes a noise.&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; animal = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Animal(&lt;span class=&quot;string&quot;&gt;&#39;animal&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;animal.speak(); &lt;span class=&quot;comment&quot;&gt;// animal makes a noise.&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最终表达出来的效果也是一致的。&lt;br&gt;最佳实践：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;总是使用 class 语法并避免直接直接操纵 prototype。为什么？因为它让代码更加简洁和易于理解。&lt;/li&gt;
&lt;li&gt;避免使用空的构造函数。如果没有指定，类有一个默认的构造函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; title=&quot;继承&quot;&gt;&lt;/a&gt;继承&lt;/h4&gt;&lt;p&gt;基于前面的 Animal 类。 让我们扩展它并定义一个 Lion 类。&lt;/p&gt;
&lt;p&gt;在 ES5 中，它更多的与原型继承有关。而在ES6中，我们有了新关键词 &lt;code&gt;extends&lt;/code&gt; 和 &lt;code&gt;super&lt;/code&gt;,有没有一点 java 的感觉–。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ES6 &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Lion&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Animal&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    speak() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.speak();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&#39; roars~.&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; lion = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Lion(&lt;span class=&quot;string&quot;&gt;&#39;Simba&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lion.speak(); &lt;span class=&quot;comment&quot;&gt;// Simba makes a noise. Simba roars&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;原生Promises&quot;&gt;&lt;a href=&quot;#原生Promises&quot; class=&quot;headerlink&quot; title=&quot;原生Promises&quot;&gt;&lt;/a&gt;原生Promises&lt;/h3&gt;&lt;p&gt;从回调地狱到Promises&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ES5&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printAfterTimeOut&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;string, timeout, done&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        done(string);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;, timeout);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;printAfterTimeout(&lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2e3&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//嵌套回调&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    printAfterTimeout(result + &lt;span class=&quot;string&quot;&gt;&#39;Reader&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2e3&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们有一个接收一个回调的函数，当 done 时执行。我们必须一个接一个地执行它两次。这也是为什么我们在回调中第二次调用 printAfterTimeout 的原因。&lt;/p&gt;
&lt;p&gt;如果你需要第 3 次或第 4 次回调，可能很快就会变得混乱。来看看我们用 promises 的写法：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//ES6&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printAfterTimeout&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;string, timeout&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;((resolve, reject) =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            resolve(string);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;, timeout);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;printAfterTimeout(&lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2e3&lt;/span&gt;).then((result) =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; printAfterTimeout(result + &lt;span class=&quot;string&quot;&gt;&#39;Reader&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2e3&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;).then((result) =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;箭头函数&quot;&gt;&lt;a href=&quot;#箭头函数&quot; class=&quot;headerlink&quot; title=&quot;箭头函数&quot;&gt;&lt;/a&gt;箭头函数&lt;/h3&gt;&lt;p&gt;在ES5z中，对于函数中 this 我们有一些问题一直存在：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//ES5&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; that = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//保持一个引用&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.btn&#39;&lt;/span&gt;).onclick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    that.sendData(); &lt;span class=&quot;comment&quot;&gt;//引用外层的 this&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.input&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;change&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sendData(); &lt;span class=&quot;comment&quot;&gt;//引用绑定的 this&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;.bind(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;));  &lt;span class=&quot;comment&quot;&gt;//绑定到外层的 this&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你需要使用一个临时的 this 在函数内部进行引用或用 bind 绑定。在 ES6 中，你可以用箭头函数。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//ES6&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.btn&#39;&lt;/span&gt;).click((event) =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sendData());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//隐式返回&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ids = [&lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;455&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;789&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; messages = ids.map(value =&amp;gt; &lt;span class=&quot;string&quot;&gt;`ID is &lt;span class=&quot;subst&quot;&gt;$&amp;#123;value&amp;#125;&lt;/span&gt;`&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;for-…of&quot;&gt;&lt;a href=&quot;#for-…of&quot; class=&quot;headerlink&quot; title=&quot;for …of&quot;&gt;&lt;/a&gt;for …of&lt;/h3&gt;&lt;p&gt;ES6 新增for …of实现迭代操作&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//ES6&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; array = [&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;d&#39;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; element &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; array)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(element);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://es6.ruanyifeng.com/#docs/style&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;想知道更多ES6新特性快点我！&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://www.improgrammer.net/wp-content/uploads/2016/03/Pasted-image-at-2016_02_26-01_26-PM-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JavaScript 在过去几年里发生了很大的变化。今天介绍几个 ES6 你不得不知道的新功能。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://nickgo.net/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JavaScript" scheme="http://nickgo.net/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>一些想说的话，一些仍然想要达到的小目标</title>
    <link href="http://nickgo.net/2016/11/04/%E4%B8%80%E4%BA%9B%E6%83%B3%E8%AF%B4%E7%9A%84%E8%AF%9D%EF%BC%8C%E4%B8%80%E4%BA%9B%E4%BB%8D%E7%84%B6%E6%83%B3%E8%A6%81%E8%BE%BE%E5%88%B0%E7%9A%84%E5%B0%8F%E7%9B%AE%E6%A0%87/"/>
    <id>http://nickgo.net/2016/11/04/一些想说的话，一些仍然想要达到的小目标/</id>
    <published>2016-11-04T13:28:01.000Z</published>
    <updated>2016-11-04T13:32:06.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://of30nsqpd.bkt.clouddn.com/md/01/IMG_4908.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;浑浑噩噩，感觉现在的自己就一直是这个状态，果然一直听说的：到了大三一切都的豪言壮志都会烟消云散。想着自己以前一腔热血制定的一揽子计划几乎都还是计划的时候，才发现自己不再是从前的自己了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;问题一-——-懒了&quot;&gt;&lt;a href=&quot;#问题一-——-懒了&quot; class=&quot;headerlink&quot; title=&quot;问题一 —— 懒了&quot;&gt;&lt;/a&gt;问题一 —— 懒了&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://of30nsqpd.bkt.clouddn.com/md/01/IMG_3308.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;不知是不是国内大学教育普遍会产生的原因，还是自己真的就慢慢惰化了，毕竟我在大学前两年都是拿奖学金的，也还没有挂过科，对学习的态度还是很专心的，但不知怎么感觉就是缺着些什么，让我始终无法产生满足感。&lt;br&gt;&lt;br&gt;&lt;br&gt;看着自己周围的同学几乎都沉迷于LOL或是各类网游时(虽然我也玩，但还是很节制滴),我还是那个我一直都有的想法，&lt;strong&gt;环境往往决定了你前行的方向&lt;/strong&gt;。想当年高中三年十年磨一剑的拼死拼活，我想没有我身边那一群学霸围绕在我身边，我可能现在就只能跟着我老爸做事了，但我认为在21世纪真的还是应该靠自己的文化出去闯荡才有立足北上广的底气啊(从小被家人灌输吃文化亏得结果–)。&lt;/p&gt;
&lt;h3 id=&quot;问题二-——-特殊时期，固话思想&quot;&gt;&lt;a href=&quot;#问题二-——-特殊时期，固话思想&quot; class=&quot;headerlink&quot; title=&quot;问题二 —— 特殊时期，固话思想&quot;&gt;&lt;/a&gt;问题二 —— 特殊时期，固话思想&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://of30nsqpd.bkt.clouddn.com/md/01/IMG_3166.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;深感中国大学教育下，我们的主要问题不是没有发现自身的问题在哪儿，其实我们都明白自身的问题，所以上面说的什么懒其实都是废话，都是这么经历过来的同仁应该都深有体会。我认为主要还是在解决问题上的行动都体现不出来，人人都有当学霸拿奖学金的念想，但到头来拿奖的年年那，学渣们也无所谓，宁可继续渣渣下去。其实在大学里面的竞争压力并不大，因为每个人基本都有着自己专业，有着自己的小目标，发展的平台也很多，与高考时与几十万人比拼，这些真的都不值一提。所以大学生们也同时放低了自己的姿态，不愿去展示自己了。刚进大学时感觉自己身边的人各个都屌的一逼，然而现在都成了撸狗。。。这种风气我认为也让我们失去了真正的耐心，在得不到回报或成果时不愿意付出更多去进步，而是宁可自甘堕落，沉迷游戏，也不再想去学了。&lt;br&gt;&lt;br&gt;有行动不难，但想要做出些成效，维持行动才是真正的考验。这点我也是深有体会，这里有个诀窍，&lt;em&gt;培养这份耐心，虽然在当前的主要事物上会很难做到，但可以用换位法，让自己体会到坚持带来的成果，最终自然会提高自己的对待事物的耐心&lt;/em&gt;。比如：我现在有件事始终坚持不下来，不妨暂且转移现在的眼光，我先坚持每天健身、跑步、保养或是其他更容易做到的一些事，等坚持了33天(一个习惯的养成时间),对比一下这前后的自己的改变，会让自己产生质的改变。我在几个月前就定下了每晚去宿舍楼下操场锻炼健身的小计划，之后就每晚缠在单双杠上摧残自己，一直到现在已经连续一百多天了，每次洗澡前看着自己的八块肌，都让我更有动力去做下一次锻炼。&lt;br&gt;&lt;img src=&quot;http://of30nsqpd.bkt.clouddn.com/md/01/IMG_4922.JPG&quot; alt=&quot;&quot;&gt;&lt;br&gt;所以我想改变可能就是需要这些小小的耐心吧。&lt;/p&gt;
&lt;h3 id=&quot;之后的计划-——-这次动真格了，真的。。&quot;&gt;&lt;a href=&quot;#之后的计划-——-这次动真格了，真的。。&quot; class=&quot;headerlink&quot; title=&quot;之后的计划 —— 这次动真格了，真的。。&quot;&gt;&lt;/a&gt;之后的计划 —— 这次动真格了，真的。。&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://of30nsqpd.bkt.clouddn.com/bg-14.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;既然我科都每天凌晨四点起来练球，我真觉得自己该真正做些什么了，前端上的(之情话题好像有些偏了。。),讲真的主要总感觉自己达不到要上战场的水准，所以我就特别不满意自己到了大三现在的状态，之前怎么样都不管了，只想现在开始在正事上培养出自己的耐心。看着我这快死去的Blog，我深感愧疚，只想现在继续丰富我的Blog，记录我所有的学习历程与感想，也与大家一起分享我的学习经验，也希望能一起帮助到迷茫困惑的兄弟。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://of30nsqpd.bkt.clouddn.com/md/01/IMG_0773.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后这一篇又臭又长的博文结束啦。。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://of30nsqpd.bkt.clouddn.com/md/01/IMG_4908.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;浑浑噩噩，感觉现在的自己就一直是这个状态，果然一直听说的：到了大三一切都的豪言壮志都会烟消云散。想着自己以前一腔热血制定的一揽子计划几乎都还是计划的时候，才发现自己不再是从前的自己了。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="感想心得" scheme="http://nickgo.net/categories/%E6%84%9F%E6%83%B3%E5%BF%83%E5%BE%97/"/>
    
    
      <category term="碎碎念" scheme="http://nickgo.net/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo搭建属于自己的个人博客---主题插件篇</title>
    <link href="http://nickgo.net/2016/07/13/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E4%B8%BB%E9%A2%98%E6%8F%92%E4%BB%B6%E7%AF%87/"/>
    <id>http://nickgo.net/2016/07/13/使用Hexo搭建属于自己的个人博客-主题插件篇/</id>
    <published>2016-07-13T15:52:45.000Z</published>
    <updated>2016-11-04T08:38:00.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://camo.githubusercontent.com/3f808a7a287f032817226fa99939d761906e1944/687474703a2f2f6431753962697761786a6e6777672e636c6f756466726f6e742e6e65742f73686f7763617365732f73686f77636173652d76312e342e6a7067&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;今天让来为我们的Hexo配置一个漂亮的主题吧，还有常用的插件介绍哟！！！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;主题&quot;&gt;&lt;a href=&quot;#主题&quot; class=&quot;headerlink&quot; title=&quot;主题&quot;&gt;&lt;/a&gt;主题&lt;/h2&gt;&lt;p&gt;Hexo的主题有太多了，给大家一个&lt;a href=&quot;https://www.zhihu.com/question/24422335&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知乎上大家分享的一些主题&lt;/a&gt; 赶快先去找一个自己最心仪的主题吧，毕竟是属于自己的博客啊，是吧。&lt;br&gt;选好后在项目文件夹下的&lt;code&gt;themes&lt;/code&gt;内&lt;code&gt;$ git clone + GitHub项目&lt;/code&gt;克隆到自己本地，记住主题文件名即为主题名。&lt;/p&gt;
&lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;p&gt;我们先看一下 &lt;strong&gt;主题的目录结构&lt;/strong&gt;，打开themes&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── languages          &lt;span class=&quot;comment&quot;&gt;#国际化&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   ├── default.yml    &lt;span class=&quot;comment&quot;&gt;#默认&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   └── zh-CN.yml      &lt;span class=&quot;comment&quot;&gt;#中文&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── layout             &lt;span class=&quot;comment&quot;&gt;#布局&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   ├── _partial       &lt;span class=&quot;comment&quot;&gt;#局部的布局&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   └── _widget        &lt;span class=&quot;comment&quot;&gt;#小挂件的布局&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── script             &lt;span class=&quot;comment&quot;&gt;#js脚本&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;             &lt;span class=&quot;comment&quot;&gt;#源代码文件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   ├── css            &lt;span class=&quot;comment&quot;&gt;#CSS&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   |   ├── _base      &lt;span class=&quot;comment&quot;&gt;#基础CSS&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   |   ├── _partial   &lt;span class=&quot;comment&quot;&gt;#局部CSS&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   |   ├── fonts      &lt;span class=&quot;comment&quot;&gt;#字体&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   |   ├── images     &lt;span class=&quot;comment&quot;&gt;#图片&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   |   └── style.styl &lt;span class=&quot;comment&quot;&gt;#style.css&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   ├── fancybox       &lt;span class=&quot;comment&quot;&gt;#fancybox&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   └── js             &lt;span class=&quot;comment&quot;&gt;#js&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── _config.yml        &lt;span class=&quot;comment&quot;&gt;#主题配置文件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;└── README.md          &lt;span class=&quot;comment&quot;&gt;#主题介绍&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主题配置文件_config.yml文件&lt;/strong&gt;&lt;br&gt;这里先以Next主题的配置信息为例，其他主题其实都类似的。&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;menu: #菜单&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  home: / #首页&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  archives: /archives #归档&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  #commonweal: /404.html #404页面&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  #tags: /tags #标签&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  #categories: /categories #分类&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  about: /about #关于&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 小图标&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;favicon: /favicon.ico&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 默认关键词&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;keywords: &quot;~&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 留空使用默认的, false 禁用, 也可以写指定的地址&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;rss:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Icon fonts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# default | linecons | fifty-shades | feather&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;icon_font: default&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 代码高亮主题 https://github.com/chriskempson/tomorrow-theme&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# normal | night | night eighties | night blue | night bright&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;highlight_theme: normal&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# MathJax Support #数学公式&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mathjax: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Schemes #启用主题中的主题Mist&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;scheme: Mist&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 侧边栏&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#  - post    只在文章页面显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#  - always  所有页面显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#  - hide    隐藏&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sidebar: always&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 自动滚动到&quot;阅读更多&quot;标记的下面&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;scroll_to_more: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 自动给目录添加序号&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;toc_list_number: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 自动截取摘要&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;auto_excerpt:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  enable: false&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  length: 150&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Lato 字体&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;use_font_lato: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Make duoshuo show UA&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# user_id must NOT be null when admin_enable is true!&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# you can visit http://dev.duoshuo.com get duoshuo user id.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;duoshuo_info:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ua_enable: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  admin_enable: false&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  user_id: 0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  #admin_nickname: ROOT&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## DO NOT EDIT THE FOLLOWING SETTINGS&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## UNLESS YOU KNOW WHAT YOU ARE DOING&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 动画&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;use_motion: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Fancybox 看图插件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fancybox: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Static files&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;vendors: vendors&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;css: css&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;js: js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;images: images&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Theme version&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;version: 0.4.5.1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;标签页面&lt;/strong&gt;&lt;br&gt;执行命令行,新建标签页面&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; page &lt;span class=&quot;string&quot;&gt;&quot;tags&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;到生成的页面文件里&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;title: tags&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;date: 2015-10-4 22:37:08&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;type: &quot;tags&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;comments: false    #关闭评论（建议）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;---&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分类页面&lt;/strong&gt;&lt;br&gt;执行命令行,新建分类页面&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; page &lt;span class=&quot;string&quot;&gt;&quot;categories&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;到生成的页面文件里&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;title: categories&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;date: 2015-10-4 22:37:08&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;type: &quot;categories&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;comments: false    #关闭评论（建议）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;---&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于页面&lt;/strong&gt;&lt;br&gt;执行命令行,新建分类页面&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; page &lt;span class=&quot;string&quot;&gt;&quot;about&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;到生成的页面文件里&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;title: about&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;date: 2015-10-4 22:37:08&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;type: &quot;about&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;comments: false    #关闭评论（建议）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;---&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;腾讯公益 404 页面&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE HTML&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;content-type&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/html;charset=utf-8;&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;IE=edge,chrome=1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;robots&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;all&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;robots&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;index,follow&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.qq.com/404/search_children.js&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;homePageUrl&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;your-site-url&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;homePageName&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;回到我的主页&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;拓展插件&quot;&gt;&lt;a href=&quot;#拓展插件&quot; class=&quot;headerlink&quot; title=&quot;拓展插件&quot;&gt;&lt;/a&gt;拓展插件&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;多说评论系统&lt;/strong&gt;&lt;br&gt;注册&lt;a href=&quot;http://duoshuo.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;多说&lt;/a&gt;，配置域名站点域名 xxx.duoshuo.com&lt;br&gt;在站点配置文件添加：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;duoshuo: &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  on: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  domain: void&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  # 是否开启多说评论，http://duoshuo.com/create-site/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  # 使用上面网址登陆你的多说，然后创建站点，在 domain 中填入你设定的域名前半部分&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  # http://&amp;lt;要填的部分&amp;gt;.duoshuo.com (domain只填上&amp;lt;&amp;gt;里的内容，不要填整个网址)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置网站统计&lt;/strong&gt;&lt;br&gt;登陆注册&lt;a href=&quot;http://tongji.baidu.com/web/welcome/login&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;百度统计&lt;/a&gt;，配置后到代码获取页面，&lt;br&gt;找到代码里 hm?js 复制后面一串字符串ID xxx&lt;br&gt;在站点配置文件添加：&lt;br&gt;&lt;code&gt;baidu_analytics: xxxxxxxxxxxxxxxx&lt;/code&gt;&lt;br&gt;&lt;strong&gt;百度分享&lt;/strong&gt;&lt;br&gt;在站点配置文件添加：&lt;br&gt;&lt;code&gt;baidushare: true&lt;/code&gt;&lt;br&gt;&lt;strong&gt;多说分享&lt;/strong&gt;&lt;br&gt;在站点配置文件添加：&lt;br&gt;&lt;code&gt;duoshuo_share: true&lt;/code&gt;&lt;br&gt;&lt;strong&gt;版权协议&lt;/strong&gt;&lt;br&gt;在站点配置文件添加：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# Creative Commons 4.0 International License.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# http://creativecommons.org/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;creative_commons: by-nc-sa&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网站访问量统计&lt;/strong&gt;&lt;br&gt;使用 &lt;a href=&quot;http://service.ibruce.info&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;不蒜子&lt;/a&gt; 提供的服务&lt;br&gt;算法a: pv的方式, 单个用户连续点击n篇文章, 记录n次访问量.&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;busuanzi_container_site_pv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    本站总访问量&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;busuanzi_value_site_pv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;次&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;算法b: uv的方式, 单个用户连续点击n篇文章, 只记录1次访客数.&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;busuanzi_container_site_uv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  本站访客数&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;busuanzi_value_site_uv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;人次&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;找到themes/next/layout/partials/footer.wsig文件&lt;br&gt;在最后一行前面添加&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;busuanzi_container_site_pv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    本站总访问量&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;busuanzi_value_site_pv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;次&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网站运行时间&lt;/strong&gt;&lt;br&gt;在最后一行前面添加&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; birthDay = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;11/20/2014&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; now = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; duration = now.getTime() - birthDay.getTime();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; total= &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(duration / (&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;showDays&quot;&lt;/span&gt;).innerHTML = &lt;span class=&quot;string&quot;&gt;&quot;本站已运行 &quot;&lt;/span&gt;+total+&lt;span class=&quot;string&quot;&gt;&quot; 天&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;showDays&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://camo.githubusercontent.com/3f808a7a287f032817226fa99939d761906e1944/687474703a2f2f6431753962697761786a6e6777672e636c6f756466726f6e742e6e65742f73686f7763617365732f73686f77636173652d76312e342e6a7067&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;今天让来为我们的Hexo配置一个漂亮的主题吧，还有常用的插件介绍哟！！！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="网站搭建" scheme="http://nickgo.net/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="http://nickgo.net/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo搭建属于自己的个人博客---配置上线篇</title>
    <link href="http://nickgo.net/2016/07/13/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E9%85%8D%E7%BD%AE%E4%B8%8A%E7%BA%BF%E7%AF%87/"/>
    <id>http://nickgo.net/2016/07/13/使用Hexo搭建属于自己的个人博客-配置上线篇/</id>
    <published>2016-07-13T15:28:44.000Z</published>
    <updated>2016-07-13T16:38:16.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://blog.wangyizhe.net/img/blog-hexo.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;务必检查电脑中是否已安装下列基本应用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;已经安装过的同学就可以直接开始安装Hexo了！&lt;br&gt;&lt;code&gt;$ npm install -g hero-cli&lt;/code&gt;&lt;br&gt;安装成功后可以输入&lt;code&gt;Hexo -v&lt;/code&gt;,如果正常出现Hexo的版本信息，就说明你已经安装成功了！&lt;br&gt;&lt;strong&gt;如果显示‘hexo’不是内部或外部命令，可能是安装时没有输入&lt;code&gt;-g&lt;/code&gt;,没有在全局下安装，重新安装即可&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：如果在Mac上正常安装会报错的话，&lt;code&gt;sudo npm install -g hero-cli&lt;/code&gt; 在前面加一个&lt;code&gt;sudo&lt;/code&gt;就不会报错了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;网站搭建&quot;&gt;&lt;a href=&quot;#网站搭建&quot; class=&quot;headerlink&quot; title=&quot;网站搭建&quot;&gt;&lt;/a&gt;网站搭建&lt;/h2&gt;&lt;p&gt;安装Hexo完成后，在自己想要存放的文件夹下面执行以下命令初始化一个Hexo项目。&lt;br&gt;&lt;code&gt;$ Hexo init&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ npm install&lt;/code&gt;&lt;br&gt;新建完成后，指定文件夹的目录如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;├── .deploy       #需要部署的文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── node_modules  #Hexo插件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── public        #生成的静态网页文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── scaffolds     #模板&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── source        #博客正文和其他源文件, 404 、favicon 、CNAME&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   ├── _drafts   #草稿&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   └── _posts    #文章&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── themes        #主题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── _config.yml   #全局配置文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;└── package.json&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输入命令&lt;code&gt;$ hexo s&lt;/code&gt;根据提示本地链接，应该就可以在浏览器上访问了，&lt;img src=&quot;https://s3.amazonaws.com/ptsteadman-images/hexo.png&quot; alt=&quot;&quot;&gt;你的网站就已经基本搭建好了，怎么样是不是简单到不可思议！下面我们为了之后继续完善我们的博客，了解一下项目内的各类文件的作用。&lt;/p&gt;
&lt;h3 id=&quot;config-yml&quot;&gt;&lt;a href=&quot;#config-yml&quot; class=&quot;headerlink&quot; title=&quot;_config.yml&quot;&gt;&lt;/a&gt;_config.yml&lt;/h3&gt;&lt;p&gt;是网站的基本信息配置，你可以在此配置一些参数。&lt;strong&gt;注意：yml语法严格，注意冒号后面必须加空格&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Site #站点信息&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;title:&lt;/span&gt; Hexo &lt;span class=&quot;comment&quot;&gt;#博客标题&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;subtitle:&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#副标题&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;description:&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#描述&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;author:&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#作者&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;language:&lt;/span&gt; zh-Hans &lt;span class=&quot;comment&quot;&gt;#语言&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;timezone:&lt;/span&gt; Asia/Shanghai &lt;span class=&quot;comment&quot;&gt;#时区&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# URL #链接格式&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;url:&lt;/span&gt; http://yoursite.com &lt;span class=&quot;comment&quot;&gt;#博客网址&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;root:&lt;/span&gt; / &lt;span class=&quot;comment&quot;&gt;#根目录&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;permalink:&lt;/span&gt; :year/:month/:day/:title/ &lt;span class=&quot;comment&quot;&gt;#文章的链接格式&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;permalink_defaults:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Directory #目录&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;source_dir:&lt;/span&gt; source &lt;span class=&quot;comment&quot;&gt;#源文件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;public_dir:&lt;/span&gt; public &lt;span class=&quot;comment&quot;&gt;#生成的文件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;tag_dir:&lt;/span&gt; tags &lt;span class=&quot;comment&quot;&gt;#标签文件夹&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;archive_dir:&lt;/span&gt; archives &lt;span class=&quot;comment&quot;&gt;#归档文件夹&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;category_dir:&lt;/span&gt; categories &lt;span class=&quot;comment&quot;&gt;#分类文件夹&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;code_dir:&lt;/span&gt; downloads/code &lt;span class=&quot;comment&quot;&gt;#下载文件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;i18n_dir:&lt;/span&gt; :lang &lt;span class=&quot;comment&quot;&gt;#国际化&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;skip_render:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Writing #写作&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;new_post_name:&lt;/span&gt; :title.md &lt;span class=&quot;comment&quot;&gt;#文章标题&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;default_layout:&lt;/span&gt; post &lt;span class=&quot;comment&quot;&gt;#模板&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;titlecase:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#标题是否换成小写&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;external_link:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#是否在新页面打开链接&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;filename_case:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;render_drafts:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;post_asset_folder:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;relative_link:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;future:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;highlight:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  line_number:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  auto_detect:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  tab_replace:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Category &amp;amp; Tag #分类和标签&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;default_category:&lt;/span&gt; uncategorized&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;category_map:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;tag_map:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Date #时间日期格式&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;date_format:&lt;/span&gt; YYYY-MM-DD&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;time_format:&lt;/span&gt; HH:mm:ss&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Pagination #分页&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;per_page:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#每页文章数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;pagination_dir:&lt;/span&gt; page&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Extensions #插件和主题&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## Plugins: http://hexo.io/plugins/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## Themes: http://hexo.io/themes/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;theme:&lt;/span&gt; landscape&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Deployment #部署配置&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## Docs: http://hexo.io/docs/deployment.html&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;deploy:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  type:&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;package-json&quot;&gt;&lt;a href=&quot;#package-json&quot; class=&quot;headerlink&quot; title=&quot;package.json&quot;&gt;&lt;/a&gt;package.json&lt;/h3&gt;&lt;p&gt;应用程序的信息,和项目所需的所有依赖模块信息。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;package.json&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;name&amp;quot;: &amp;quot;hexo-site&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;version&amp;quot;: &amp;quot;0.0.0&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;private&amp;quot;: true,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;hexo&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;version&amp;quot;: &amp;quot;&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;dependencies&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;hexo&amp;quot;: &amp;quot;^3.0.0&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;hexo-generator-archive&amp;quot;: &amp;quot;^0.1.0&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;hexo-generator-category&amp;quot;: &amp;quot;^0.1.0&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;hexo-generator-index&amp;quot;: &amp;quot;^0.1.0&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;hexo-generator-tag&amp;quot;: &amp;quot;^0.1.0&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;hexo-renderer-ejs&amp;quot;: &amp;quot;^0.1.0&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;hexo-renderer-stylus&amp;quot;: &amp;quot;^0.2.0&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;hexo-renderer-marked&amp;quot;: &amp;quot;^0.2.4&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;hexo-server&amp;quot;: &amp;quot;^0.1.2&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;scaffolds&quot;&gt;&lt;a href=&quot;#scaffolds&quot; class=&quot;headerlink&quot; title=&quot;scaffolds&quot;&gt;&lt;/a&gt;scaffolds&lt;/h3&gt;&lt;p&gt;模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。&lt;/p&gt;
&lt;h3 id=&quot;source&quot;&gt;&lt;a href=&quot;#source&quot; class=&quot;headerlink&quot; title=&quot;source&quot;&gt;&lt;/a&gt;source&lt;/h3&gt;&lt;p&gt;资源文件夹是存放用户资源的地方。除&lt;code&gt;_posts&lt;/code&gt; 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。&lt;/p&gt;
&lt;h3 id=&quot;Themes&quot;&gt;&lt;a href=&quot;#Themes&quot; class=&quot;headerlink&quot; title=&quot;Themes&quot;&gt;&lt;/a&gt;Themes&lt;/h3&gt;&lt;p&gt;主题文件夹,从网上下载的主题也需存放在这里。Hexo 会根据主题来生成静态页面。&lt;/p&gt;
&lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;title&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;网站标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;subtitle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;网站副标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;description&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;网站描述&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;author&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;作者名字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;language&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;网站使用的语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;网站时区&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其他配置信息我们之后接触在继续了解就行了。&lt;/p&gt;
&lt;h2 id=&quot;基本指令&quot;&gt;&lt;a href=&quot;#基本指令&quot; class=&quot;headerlink&quot; title=&quot;基本指令&quot;&gt;&lt;/a&gt;基本指令&lt;/h2&gt;&lt;h3 id=&quot;新建文章&quot;&gt;&lt;a href=&quot;#新建文章&quot; class=&quot;headerlink&quot; title=&quot;新建文章&quot;&gt;&lt;/a&gt;新建文章&lt;/h3&gt;&lt;p&gt;&lt;code&gt;$ hero new &amp;quot;title&amp;quot;&lt;/code&gt;&lt;br&gt;使用后会在&lt;code&gt;source/_post&lt;/code&gt;文件夹下生成&lt;code&gt;title.md&lt;/code&gt;文件，直接编辑保存即可，这样一篇文章就建好了。注意需用&lt;code&gt;markdown&lt;/code&gt;格式输入自己的文章，推荐&lt;a href=&quot;https://maxiang.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一个在线markdown编辑器&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;生成静态文件&quot;&gt;&lt;a href=&quot;#生成静态文件&quot; class=&quot;headerlink&quot; title=&quot;生成静态文件&quot;&gt;&lt;/a&gt;生成静态文件&lt;/h3&gt;&lt;p&gt;&lt;code&gt;$ hexo generate&lt;/code&gt;&lt;br&gt;输入命令后会在项目文件夹内生成&lt;code&gt;public&lt;/code&gt;文件夹，存放渲染出的网站静态文件。&lt;/p&gt;
&lt;h3 id=&quot;启动服务器&quot;&gt;&lt;a href=&quot;#启动服务器&quot; class=&quot;headerlink&quot; title=&quot;启动服务器&quot;&gt;&lt;/a&gt;启动服务器&lt;/h3&gt;&lt;p&gt;&lt;code&gt;$ hexo server&lt;/code&gt;&lt;br&gt;启动服务器。默认情况下，访问网址为： &lt;code&gt;http://localhost:4000/&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;部署网站&quot;&gt;&lt;a href=&quot;#部署网站&quot; class=&quot;headerlink&quot; title=&quot;部署网站&quot;&gt;&lt;/a&gt;部署网站&lt;/h3&gt;&lt;p&gt;&lt;code&gt;$ hexo deploy&lt;/code&gt;&lt;br&gt;本地搭建好我们网站后，我们的下一步就是让我们的网站上线了，现在来介绍一下现在最普遍流行的利用GitHub来存放我们的网站。还没有Github账户的童鞋赶紧注册吧。&lt;br&gt;&lt;img src=&quot;https://www.codenameone.com/img/blog/github-logo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-首先在repositories选项下new一个新项目，注意项目名务必设置为自己的用户名-github-io来命名，例如我的账号名为void，则将项目名设为void-github-io即可。&quot;&gt;&lt;a href=&quot;#1-首先在repositories选项下new一个新项目，注意项目名务必设置为自己的用户名-github-io来命名，例如我的账号名为void，则将项目名设为void-github-io即可。&quot; class=&quot;headerlink&quot; title=&quot;1.首先在repositories选项下new一个新项目，注意项目名务必设置为自己的用户名.github.io来命名，例如我的账号名为void，则将项目名设为void.github.io即可。&quot;&gt;&lt;/a&gt;1.首先在repositories选项下&lt;code&gt;new&lt;/code&gt;一个新项目，注意项目名务必设置为自己的&lt;code&gt;用户名.github.io&lt;/code&gt;来命名，例如我的账号名为&lt;code&gt;void&lt;/code&gt;，则将项目名设为&lt;code&gt;void.github.io&lt;/code&gt;即可。&lt;/h4&gt;&lt;h4 id=&quot;2-配置本地项目下的-config-yml文件&quot;&gt;&lt;a href=&quot;#2-配置本地项目下的-config-yml文件&quot; class=&quot;headerlink&quot; title=&quot;2.配置本地项目下的_config.yml文件&quot;&gt;&lt;/a&gt;2.配置本地项目下的&lt;code&gt;_config.yml&lt;/code&gt;文件&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;_config.yml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;deploy:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  type: git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  repository: https://github.com/void/void.github.io.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  branch: master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;任然以前的假设为例子，这样就可以输入指令&lt;br&gt;&lt;code&gt;$ hexo deploy&lt;/code&gt; 将我们的网站部署到Github中了！！！&lt;br&gt;等待操作完成后，在线访问&lt;code&gt;http://你的用户名.github.io&lt;/code&gt;看看是不是自己的网站已经可以在线看到了！&lt;br&gt;好了今天我们就到这里，接下来我会就主题以及一些实用插件进行介绍，来完善我们的博客。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://blog.wangyizhe.net/img/blog-hexo.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="网站搭建" scheme="http://nickgo.net/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="http://nickgo.net/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Javascript高级特性之call和apply</title>
    <link href="http://nickgo.net/2016/05/18/Javascript%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B9%8Bcall%E5%92%8Capply/"/>
    <id>http://nickgo.net/2016/05/18/Javascript高级特性之call和apply/</id>
    <published>2016-05-18T11:57:08.000Z</published>
    <updated>2016-11-05T12:51:25.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/0060lm7Tgw1f3zt6vfykkj308y04cglr.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在Javascript中，call和apply是两个神奇的方法，但同时也是容易令人迷惑的两个方法，乃至许多对Javascript有经验的人也不太清楚他们的用法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Javascript高级特性之call和apply&quot;&gt;&lt;a href=&quot;#Javascript高级特性之call和apply&quot; class=&quot;headerlink&quot; title=&quot;Javascript高级特性之call和apply&quot;&gt;&lt;/a&gt;Javascript高级特性之call和apply&lt;/h1&gt;&lt;h2 id=&quot;1-call和apply&quot;&gt;&lt;a href=&quot;#1-call和apply&quot; class=&quot;headerlink&quot; title=&quot;1.call和apply&quot;&gt;&lt;/a&gt;1.call和apply&lt;/h2&gt;&lt;p&gt;call和apply的功能是以不同的对象作为上下文来调用某个函数。简而言之，就是允许一个对象区调用另一个对象的成员函数。乍一看似乎很不可思议，而且容易引起混乱，但其实Javascript并没有严格的所谓”成员函数”的概念，函数与对象的所属关系在调用时才展现出来。灵活使用call和apply可以节省不少的时间，在后面我们可以看到，call可以用于实现对象的继承。&lt;/p&gt;
&lt;p&gt;call和apply的功能是一致的，两者细微的差别在于call以参数表来接受被调用函数的参数，而apply以数组来接受被调用函数的参数。call和apply的语法分别是：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;func.call(thisArg[,arg1[,arg2[, ...]]]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;func.apply(thisArg[,argsArray]);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中，func是函数的引用，thisArg是func被调用时的上下文对象，arg1、arg2或argsArray是传入func的参数。我们以下面一段代码为例介绍call的工作机制：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; someuser = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;nick&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    display: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;words&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&#39; says &#39;&lt;/span&gt; + words);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;foobar&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;someuser.display.call(foo, &lt;span class=&quot;string&quot;&gt;&#39;hello&#39;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//输出 foobar says hello&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用Node.js运行这段代码，我们可以看到控制台输出了foobar。Someuser.display是被调用的函数，它通过call将上下文改变为foo对象，因此在函数体内访问this.name时，实际上访问的是foo.name,因而输出了foobar。&lt;/p&gt;
&lt;h2 id=&quot;2-bind&quot;&gt;&lt;a href=&quot;#2-bind&quot; class=&quot;headerlink&quot; title=&quot;2.bind&quot;&gt;&lt;/a&gt;2.bind&lt;/h2&gt;&lt;p&gt;如何改变被调用函数上下文呢？前面说过，可以用call或apply方法，但是如果重复使用会不方便，因为每次都要把上下文对象作为参数传递，而且还会使代码变得不直观。针对这种情况，我们可以使用bind方法来永久地绑定函数的上下文，使其无论被谁调用，上下文都是固定的。bind语法如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;func.bind(thisArg[, arg1[, arg2[, ...]]])&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中func是待绑定函数，thisArg是改变的上下文对象，arg1、arg2是绑定的参数表。bind方法返回值是上下文为thisArg的func。通过下面例子可以帮你理解bind的使用方法：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; someuser = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;nick&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    func: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;foobar&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;foo.func = someuser.func;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;foo.func(); &lt;span class=&quot;comment&quot;&gt;//输出 foobar&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;foo.func1 = someuser.func.bind(someuser)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;foo.func1();&lt;span class=&quot;comment&quot;&gt;//输出nick&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;func = someuser.func.bind(foo);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;func();&lt;span class=&quot;comment&quot;&gt;//输出foobar&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;func2 = func;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;func2();&lt;span class=&quot;comment&quot;&gt;//输出foobar&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码直接将foo.func赋值为someuser.func，调用foo.func()时，this指针为foo，所以输出结果是foobar。foo.func1使用了bind方法，将someuser作为this指针绑定到someuser.func，调用foo.func1()时，this指针为someuser，所以输出结果是nick。全局函数func同样使用了bind方法，将foo作为this指针绑定到someuser.func，调用func()时，this指针为foo，所以输出结果是foobar。而func2直接绑定过的func赋值过来，与func行为完全相同。&lt;/p&gt;
&lt;h2 id=&quot;3-使用bind绑定参数表&quot;&gt;&lt;a href=&quot;#3-使用bind绑定参数表&quot; class=&quot;headerlink&quot; title=&quot;3.使用bind绑定参数表&quot;&gt;&lt;/a&gt;3.使用bind绑定参数表&lt;/h2&gt;&lt;p&gt;bind 方法还有一个重要的功能：绑定参数表，如下例所示。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;nick&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    says: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;act, obj&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; + act + &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; + obj);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person.says(&lt;span class=&quot;string&quot;&gt;&#39;love&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;sal&#39;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//nick love sal&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;nickLoves = person.says.bind(person, &lt;span class=&quot;string&quot;&gt;&#39;love&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;nickLoves(&lt;span class=&quot;string&quot;&gt;&#39;you&#39;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//输出nick love you&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，nickLoves将this指针绑定到了person，并将第一个参数绑定到love,之后再调用nickLoves的时候，只需传入第三个参数。这个特性可以用于创建一个函数的“捷径“，之后我们可以通过这个”捷径“调用，以便在代码多出调用时省略重复输入相同的参数。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/0060lm7Tgw1f3zt6vfykkj308y04cglr.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在Javascript中，call和apply是两个神奇的方法，但同时也是容易令人迷惑的两个方法，乃至许多对Javascript有经验的人也不太清楚他们的用法。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://nickgo.net/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JavaScript" scheme="http://nickgo.net/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 操作指南</title>
    <link href="http://nickgo.net/2016/05/18/Hexo%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/"/>
    <id>http://nickgo.net/2016/05/18/Hexo操作指南/</id>
    <published>2016-05-18T11:56:02.000Z</published>
    <updated>2016-11-04T02:32:39.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/0060lm7Tgw1f2jo610sk3j31hb0u0qkh.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;http://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo generate&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo deploy&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/0060lm7Tgw1f2jo610sk3j31hb0u0qkh.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;http://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="操作指南" scheme="http://nickgo.net/categories/%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/"/>
    
    
      <category term="Hexo" scheme="http://nickgo.net/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Javascript高级特性之闭包</title>
    <link href="http://nickgo.net/2016/05/18/Javascript%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B9%8B%E9%97%AD%E5%8C%85/"/>
    <id>http://nickgo.net/2016/05/18/Javascript高级特性之闭包/</id>
    <published>2016-05-18T11:56:02.000Z</published>
    <updated>2016-11-05T12:51:20.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/0060lm7Tgw1f3zslcb9f5j309o05d74c.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;闭包（closure）是函数式编程中的概念，出现于20世纪60年代。闭包的严格定义是“由函数（环境）及其封闭式的自由变量组成的集合体。”这个定义对于大家来说有些晦涩难懂，所以让我们先通过例子和不那么严格的解释来说明何为闭包，然后再举例说明一些闭包的经典用途。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;JavaScript高级特性之关于闭包的理解&quot;&gt;&lt;a href=&quot;#JavaScript高级特性之关于闭包的理解&quot; class=&quot;headerlink&quot; title=&quot;JavaScript高级特性之关于闭包的理解&quot;&gt;&lt;/a&gt;JavaScript高级特性之关于闭包的理解&lt;/h1&gt;&lt;h2 id=&quot;1-什么是闭包&quot;&gt;&lt;a href=&quot;#1-什么是闭包&quot; class=&quot;headerlink&quot; title=&quot;1.什么是闭包&quot;&gt;&lt;/a&gt;1.什么是闭包&lt;/h2&gt;&lt;p&gt;通俗地讲，Javascript中每个的函数都是一个闭包，但通常意义上嵌套的函数更能够体现出闭包的特性，看下面的这个例子：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; generateClosure = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; get = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        count ++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; count;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; get;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; counter = generateClosure();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter()); &lt;span class=&quot;comment&quot;&gt;//输出1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter()); &lt;span class=&quot;comment&quot;&gt;//输出2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter()); &lt;span class=&quot;comment&quot;&gt;//输出3&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这段代码中，generateClosure()函数中有一个局部变量count，初值为0.还有一个叫做get的函数，get将其父作用域，也就是generateClosure()函数中的count变量加1，并返回count的值。generateClosure()的返回值是get函数。在外部我们通过counter变量调用了generateClosure()函数并获取了它的返回值，也就是get函数，接下来反复调用了counter(),我们发现每次返回值都递增了1.&lt;/p&gt;
&lt;p&gt;让我们看看上面的例子有什么特点，按照通常命令式编程思维的理解，count是generateClosure函数内部的变量，它的生命周期就是generateClosure被调用的时期，当generateClosure从调用栈中返回时，count变量申请的空间也就被释放。问题是，在generateClusure()调用结束后，counter()却引用了“已经释放了的”count变量，而且非但没有出错，反而每次调用counter()时还修改并返回了count。这是怎么回事呢？&lt;/p&gt;
&lt;p&gt;这正是所谓的闭包特性。当一个函数返回它内部定义的一个函数时，就产生了一个闭包，闭包不但包括被返回的函数，还包括这个函数的定义环境。上面例子中，当函数generateClosure()的内部函数get被一个外部变量counter引用时，counter和generateClosure()局部变量就是一个闭包。如果还不够清晰，下面这个例子可以帮助你理解：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; generateClosure = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; get = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        count++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; count;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; get;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; counter1 = generateClosure();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; counter2 = generateClosure();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter1()); &lt;span class=&quot;comment&quot;&gt;//输出1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter2()); &lt;span class=&quot;comment&quot;&gt;//输出1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter1()); &lt;span class=&quot;comment&quot;&gt;//输出2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter1()); &lt;span class=&quot;comment&quot;&gt;//输出3&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter2()); &lt;span class=&quot;comment&quot;&gt;//输出2&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面这个例子解释了闭包是如何产生的：counter1和counter2分别调用了generateClosure()函数，生成了两个闭包的实例，它们内部引用的count变量分别属于各自的运行环境。我们可以理解为，在generateClosure()返回get函数时，私下将get可能引用到的generateClosure()函数的内部变量(也就是count变量)也返回了，并在内存中生成了一个副本，之后generateClosure()返回的函数的两个实例counter1和counter2就是相互独立的了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;2-闭包的用途&quot;&gt;&lt;a href=&quot;#2-闭包的用途&quot; class=&quot;headerlink&quot; title=&quot;2.闭包的用途&quot;&gt;&lt;/a&gt;2.闭包的用途&lt;/h2&gt;&lt;h3 id=&quot;1-嵌套的回调函数&quot;&gt;&lt;a href=&quot;#1-嵌套的回调函数&quot; class=&quot;headerlink&quot; title=&quot;1.嵌套的回调函数&quot;&gt;&lt;/a&gt;1.嵌套的回调函数&lt;/h3&gt;&lt;p&gt;闭包有两个主要的用途，一是实现嵌套的函数，二是隐藏对象的细节。让我们先看下面这段代码示例，了解嵌套的回调函数。如下代码是在Node.js中使用MongoDB实现一个简单的增加用户的功能：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;exports.add_user = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;user_info, callback&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; uid = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(user_info[&lt;span class=&quot;string&quot;&gt;&#39;uid&#39;&lt;/span&gt;]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mongodb.open(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, db&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(err) &amp;#123;callback(err);&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        db.collection(&lt;span class=&quot;string&quot;&gt;&quot;users&quot;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err,collection&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(err) &amp;#123;callback(err);&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            collection.ensureIndex(&lt;span class=&quot;string&quot;&gt;&quot;uid&quot;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(err) &amp;#123;callback(err);&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                collection.ensureIndex(&lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(err) &amp;#123;callback(err);&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    collection.findone(&amp;#123;uid:uid&amp;#125;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(err) &amp;#123;callback(err);&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(doc)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            callback(&lt;span class=&quot;string&quot;&gt;&#39;occupied&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; user = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                uid: uid,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                user: user_info&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            collection.insert(user, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                callback(err);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果你对Node.js或MongoDB不熟悉，没关系，不需要去理解细节，只要看清楚大概的逻辑即可。这段代码中用到了闭包的层层嵌套，每一层嵌套都是一个回调函数。回调函数不会立即执行，而是等待相应请求处理完成后由请求的函数回调。我们可以看到，在嵌套的每一层中都有对callback的引用，而且最里层还用到了外层定义的uid变量。由于闭包机制的存在，即使外层函数已经执行完毕，其作用域内申请的变量也不会释放，因为里层的函数还有可能引用到这些变量，这样就完美地实现了嵌套的异步回调。&lt;/p&gt;
&lt;h3 id=&quot;2-实现私有成员&quot;&gt;&lt;a href=&quot;#2-实现私有成员&quot; class=&quot;headerlink&quot; title=&quot;2.实现私有成员&quot;&gt;&lt;/a&gt;2.实现私有成员&lt;/h3&gt;&lt;p&gt;我们知道，Javas的对象没有私有属性，也就是说对象的每一个属性都是暴露给外部的。这样可能会有安全隐患，譬如对象的使用者直接修改了某个属性，导致对象内部数据的一致性受到破坏等。Javascript通过约定在所有私有属性前加上下划线（例如_myPrivateProp）,表示这个属性是私有的，外部对象不应该直接读写它。但这只是个非正式的约定，假设对象的使用者不这么做，有没有更严格的机制呢？答案是有的，通过闭包可以实现。让我们再看看前面那个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; generateClosure = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; get = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        count++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; count;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; get;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; counter = generateClosure();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter());&lt;span class=&quot;comment&quot;&gt;//输出1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter());&lt;span class=&quot;comment&quot;&gt;//输出2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter());&lt;span class=&quot;comment&quot;&gt;//输出3&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以看到，只有调用counter()才能访问到闭包内的count变量，并按照规则对其增加1，除此之外决无可能用其他方式找到count变量。受到这个简单例子的启发，我们可以把一个对象用闭包封装起来，只返回一个”访问器”对象，即可实现对细节隐藏。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/0060lm7Tgw1f3zslcb9f5j309o05d74c.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;闭包（closure）是函数式编程中的概念，出现于20世纪60年代。闭包的严格定义是“由函数（环境）及其封闭式的自由变量组成的集合体。”这个定义对于大家来说有些晦涩难懂，所以让我们先通过例子和不那么严格的解释来说明何为闭包，然后再举例说明一些闭包的经典用途。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://nickgo.net/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JavaScript" scheme="http://nickgo.net/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>如何直接在github上预览html效果</title>
    <link href="http://nickgo.net/2016/04/17/%E5%A6%82%E4%BD%95%E7%9B%B4%E6%8E%A5%E5%9C%A8github%E4%B8%8A%E9%A2%84%E8%A7%88html%E6%95%88%E6%9E%9C/"/>
    <id>http://nickgo.net/2016/04/17/如何直接在github上预览html效果/</id>
    <published>2016-04-17T06:16:35.000Z</published>
    <updated>2016-04-17T07:02:32.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/0060lm7Tgw1f2zoo4eo2ej30l10d9gnb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们经常会在&lt;strong&gt;Github&lt;/strong&gt;上托管我们的web项目，但一般只能在上面看到我们的源码，如果想要在线预览我们的项目该怎么办呢？其实只需要很简单的方法就能做到了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Github项目效果在线预览&quot;&gt;&lt;a href=&quot;#Github项目效果在线预览&quot; class=&quot;headerlink&quot; title=&quot;Github项目效果在线预览&quot;&gt;&lt;/a&gt;Github项目效果在线预览&lt;/h2&gt;&lt;p&gt;在&lt;strong&gt;Github&lt;/strong&gt;上托管的项目中经常会存放一些demo的html文件在里面，比如像是下面这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/0060lm7Tgw1f2zoo4eo2ej30l10d9gnb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果直接点击html文件只能看到html文件的源码，那么有没有什么办法可以直接在浏览器看到html的网页效果而不用克隆到本地呢？&lt;/p&gt;
&lt;p&gt;做法是&lt;strong&gt;&lt;a href=&quot;http://htmlpreview.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://htmlpreview.github.com/&lt;/a&gt;&lt;/strong&gt;直接把github上的html文件链接复制在上面即可，或者直接在你的html文件链接前加上&lt;strong&gt;&lt;a href=&quot;http://htmlpreview.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://htmlpreview.github.io/?&lt;/a&gt;&lt;/strong&gt;如图：&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/0060lm7Tgw1f2zoo4dm1bj30lj08raaw.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;比如，Github上我有这么一个文件&lt;strong&gt;&lt;a href=&quot;https://github.com/Nicksapp/To-Do-List/blob/master/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Nicksapp/To-Do-List/blob/master/index.html&lt;/a&gt;&lt;/strong&gt;,直接访问看到的是这样的：&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/0060lm7Tgw1f2zoo4nsmcj30pa0etjvo.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;只有这样访问我们的文件才能直接在网页中预览到效果：&lt;strong&gt;&lt;a href=&quot;http://htmlpreview.github.io/?https://github.com/Nicksapp/To-Do-List/blob/master/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://htmlpreview.github.io/?https://github.com/Nicksapp/To-Do-List/blob/master/index.html&lt;/a&gt;&lt;/strong&gt;像是这样：&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/0060lm7Tgw1f2zp683ug6j30s00jqjtr.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;赶紧拿自己的项目试试吧！&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/0060lm7Tgw1f2zoo4eo2ej30l10d9gnb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们经常会在&lt;strong&gt;Github&lt;/strong&gt;上托管我们的web项目，但一般只能在上面看到我们的源码，如果想要在线预览我们的项目该怎么办呢？其实只需要很简单的方法就能做到了&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="实用技巧" scheme="http://nickgo.net/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="github" scheme="http://nickgo.net/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令总结</title>
    <link href="http://nickgo.net/2016/04/04/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>http://nickgo.net/2016/04/04/Git常用命令总结/</id>
    <published>2016-04-03T16:30:28.000Z</published>
    <updated>2016-11-05T12:50:54.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/0060lm7Tgw1f2jzaz7beqj30cn05ajrq.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学会这些命令，你就可以熟练的使用Git工具，听上去就让人兴奋，嘿嘿！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;基本命令&quot;&gt;&lt;a href=&quot;#基本命令&quot; class=&quot;headerlink&quot; title=&quot;基本命令&quot;&gt;&lt;/a&gt;基本命令&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git config --global user.name &amp;quot;Your Name&amp;quot;&lt;/code&gt;设置你的仓库用户名（用于标识提交者）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global user.name &amp;quot;email@example.com&amp;quot;&lt;/code&gt;设置你的仓库邮箱（用于标识提交者）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git init&lt;/code&gt;初始化一个git仓库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add --all&lt;/code&gt;添加所有更改文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add filename&lt;/code&gt;指定添加名为filename文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;commit message&amp;quot;&lt;/code&gt;添加更改的信息，必须要有，不然报错，不建议不加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git status&lt;/code&gt;查看git当前状态&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git diff filename&lt;/code&gt;查看filename修改内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git log&lt;/code&gt;查看最近的提交日志&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git log --pretty=oneline&lt;/code&gt;单行显示提交日志&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git reset --hard commitID&lt;/code&gt;利用&lt;code&gt;git log&lt;/code&gt;得到的commitID返回版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git reset --hard HEAD^&lt;/code&gt;回到上一个版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git reflog&lt;/code&gt;查看命令的历史，可以找到&lt;code&gt;git log&lt;/code&gt;看不到的commitID，因为&lt;code&gt;git log&lt;/code&gt;只显示当前的提交日志，如果你提交了一次，退回版本后又后悔了，就能查看上次提交的commitID&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout -- filename&lt;/code&gt;利用版本库中的版本替换工作区中的文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git reset HEAD filename&lt;/code&gt;撤销add，回到工作区&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rm filename&lt;/code&gt;删除文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote add origin https://github.com/pengloo53/learngit.git&lt;/code&gt;将本地库关联到github远程库上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push -u origin master&lt;/code&gt;第一次推送的时候要加上&lt;code&gt;-u&lt;/code&gt;参数，可以将本地库的master分支与远程库的master分支关联起来；下次提交就不需要加&lt;code&gt;-u&lt;/code&gt;了。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/pengloo53/learngit.git&lt;/code&gt;克隆远程库到本地&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;分支管理&quot;&gt;&lt;a href=&quot;#分支管理&quot; class=&quot;headerlink&quot; title=&quot;分支管理&quot;&gt;&lt;/a&gt;分支管理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git checkout -b dev&lt;/code&gt;创建dev分支并切换到dev&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch&lt;/code&gt;查看当前分支&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git merge dev&lt;/code&gt;合并指定分支到当前分支，如，你现在master分支，那么执行命令就将dev分支合并到了master分支上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -d dev&lt;/code&gt;删除dev分支&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git log --graph --pretty=oneline --abbrev-commit&lt;/code&gt;查看分支合并图&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git merge --no-ff -m &amp;quot;merge with no-ff&amp;quot; dev&lt;/code&gt;禁用「Fast forward」，也就是保留分支的相关信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git stash&lt;/code&gt;将工作区现场储藏起来，等以后恢复后继续工作。通常用于处理更为着急的任务时&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git stash list&lt;/code&gt;查看保存的工作现场&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git stash apply&lt;/code&gt;恢复工作现场&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git stash drop&lt;/code&gt;删除stash内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git stash pop&lt;/code&gt;恢复的同时直接删除stash内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git stash apply stash@{0}&lt;/code&gt;恢复指定的工作现场，当你保存了不只一份工作现场时&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -D feature-vulcan&lt;/code&gt;强行删除分支。用于不需要合并，就地删除的情况&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote&lt;/code&gt;查看远程库的信息，一般返回origin&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote -v&lt;/code&gt;查看远程库的详细信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin master&lt;/code&gt;将本地master分支推送到远程master分支(&lt;br&gt;  master分支为主分支，因此要时刻与远程同步；&lt;br&gt;  dev分支为开发分支，团队成员都需要在上面工作，所以也需要与远程同步；&lt;br&gt;  bug分支只用于在本地修复bug，没有必要推送到远程；&lt;br&gt;  feature新功能分支是否推送到远程，取决于你是否和其他人合作在上面开发。&lt;br&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/pengloo53/learngit.git&lt;/code&gt;将远程库克隆到本地，默认只能看到master分支&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout -b dev origin/dev&lt;/code&gt;创建远程dev分支到本地&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git pull&lt;/code&gt;将远程分支的最新内容抓取下来&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch --set-upstream dev origin/dev&lt;/code&gt;将本地dev分支与远程dev分支之间建立链接&lt;br&gt;&lt;br&gt;&lt;em&gt;多人协作工作模式&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;首先，可以试图用&lt;code&gt;git push origin branch-name&lt;/code&gt;推送自己的修改；&lt;/li&gt;
&lt;li&gt;如果推送失败，则因为远程分支比你的本地更新，需要先用&lt;code&gt;git pull&lt;/code&gt;试图合并（如果&lt;code&gt;git pull&lt;/code&gt;提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令&lt;code&gt;git branch --set-upstream branch-name origin/branch-name&lt;/code&gt;）; &lt;/li&gt;
&lt;li&gt;如果合并有冲突，则解决冲突，并在本地提交； &lt;/li&gt;
&lt;li&gt;没有冲突或者解决掉冲突后，再用&lt;code&gt;git push origin branch-name&lt;/code&gt;推送就能成功！&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;标签管理&quot;&gt;&lt;a href=&quot;#标签管理&quot; class=&quot;headerlink&quot; title=&quot;标签管理&quot;&gt;&lt;/a&gt;标签管理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git tag v1.0&lt;/code&gt;给当前分支打上标签&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git tag&lt;/code&gt;查看所有的标签，按时间顺序列出&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git log --pretty=oneline --abbrev-commit&lt;/code&gt;缩略commitID并单行显示提交信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git tag v0.9 commitID&lt;/code&gt;通过上一条命令查看commitID，然后打上标签。用于忘记打标签的情况，因为标签其实就是只想某个commitID的指针，默认情况下，标签打在最新的提交上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git show v0.9&lt;/code&gt; 查看标签信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git tag -a v0.1 -m &amp;quot;version 0.1 released&amp;quot; commitID&lt;/code&gt;创建带有说明的标签，&lt;code&gt;-a&lt;/code&gt;指定标签名，&lt;code&gt;-m&lt;/code&gt;指定说明文字&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git tag -d v0.1&lt;/code&gt; 删除标签v0.1&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin v1.0&lt;/code&gt;推送标签1.0到远程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin --tags&lt;/code&gt;推送所有的标签到远程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin :refs/tags/v0.9&lt;/code&gt;删除远程标签，但是前提是要先在本地删除对应标签&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;自定义Git&quot;&gt;&lt;a href=&quot;#自定义Git&quot; class=&quot;headerlink&quot; title=&quot;自定义Git&quot;&gt;&lt;/a&gt;自定义Git&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git config --global color.ui true&lt;/code&gt;让Git显示颜色&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.gitignore&lt;/code&gt;在这个文件里编辑你要忽略的文件，并提交到Git中，就可以忽略特殊文件的检查。如将&lt;code&gt;-.db&lt;/code&gt;写入&lt;code&gt;.gitignore&lt;/code&gt;文件中，将忽略所有db文件。可以参考github收集的所有.gitignore&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global alias.st status&lt;/code&gt;将status的别名设置成st，那么&lt;code&gt;git st&lt;/code&gt;=&lt;code&gt;git status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global alias.unstage &amp;#39;reset HEAD&amp;#39;&lt;/code&gt;那么&lt;code&gt;git reset HEAD filename&lt;/code&gt;=&lt;code&gt;git unstage filename&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global alias.last &amp;#39;log -1&amp;#39;&lt;/code&gt;敲&lt;code&gt;git last&lt;/code&gt;就显示最后一次提交了&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;搭建Git服务器&quot;&gt;&lt;a href=&quot;#搭建Git服务器&quot; class=&quot;headerlink&quot; title=&quot;搭建Git服务器&quot;&gt;&lt;/a&gt;搭建Git服务器&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get install git&lt;/code&gt;安装Git&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo adduser git&lt;/code&gt;添加Git用户&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo git init --bare sample.git&lt;/code&gt;初始化git仓库&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo chown -R git:git sample.git&lt;/code&gt;修改仓库的所属用户为git&lt;br&gt;&lt;/li&gt;
&lt;li&gt;将git用户的信息&lt;code&gt;git:x:1001:1001:,,,:/home/git:/bin/bash&lt;/code&gt;改成&lt;code&gt;git:x:1001:1001:,,,:/home/git:/bin/git-shell&lt;/code&gt;,为了禁用shell登录&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clone git@server:/director/sample.git&lt;/code&gt;克隆Git服务器上的仓库&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/0060lm7Tgw1f2jzaz7beqj30cn05ajrq.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学会这些命令，你就可以熟练的使用Git工具，听上去就让人兴奋，嘿嘿！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://nickgo.net/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="git" scheme="http://nickgo.net/tags/git/"/>
    
  </entry>
  
</feed>
